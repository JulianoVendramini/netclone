{"version":3,"sources":["Tmdb.js","components/MovieRow.js","components/FeaturedMovie.js","components/Header.js","components/Footer.js","App.js","index.js"],"names":["API_KEY","basicFetch","endpoint","a","fetch","req","json","getHomeList","slug","title","items","getMovieInfo","movieId","type","info","useState","scrollX","setScrollX","className","onClick","x","Math","round","window","innerWidth","style","fontSize","listW","results","length","marginLeft","width","map","item","key","src","poster_path","alt","original_title","firstDate","Date","first_air_date","genres","i","push","name","description","overview","substring","backgroundSize","backgroundPosition","backgroundImage","backdrop_path","original_name","vote_average","getFullYear","number_of_seasons","href","id","join","black","movieList","setMovieList","featuredData","setFeaturedData","backGroundBlack","setBackGroundBlack","useEffect","scrollListener","scrollY","addEventListener","removeEventListener","Tmdb","list","originals","filter","randomChosen","floor","random","chosen","chosenInfo","loadAll","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+RACMA,EAAU,mCAIVC,EAAU,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACGC,MAAM,GAAD,OAJV,gCAIU,OAAeF,IADvB,cACTG,EADS,gBAEIA,EAAIC,OAFR,cAETA,EAFS,yBAGRA,GAHQ,2CAAH,sDAMD,GACXC,YAAY,WAAD,4BAAE,sBAAAJ,EAAA,sEAKYF,EAAW,yDAAD,OAA0DD,IALhF,gCAGDQ,KAAM,YACNC,MAAO,uBACPC,MALC,eAUYT,EAAW,6CAAD,OAA8CD,IAVpE,gCAQDQ,KAAM,WACNC,MAAO,4BACPC,MAVC,gBAeYT,EAAW,2CAAD,OAA4CD,IAflE,iCAaDQ,KAAM,WACNC,MAAO,UACPC,MAfC,gBAoBYT,EAAW,yDAAD,OAA0DD,IApBhF,iCAkBDQ,KAAM,SACNC,MAAO,aACPC,MApBC,gBAyBYT,EAAW,yDAAD,OAA0DD,IAzBhF,iCAuBDQ,KAAM,SACNC,MAAO,aACPC,MAzBC,gBA8BYT,EAAW,yDAAD,OAA0DD,IA9BhF,mCA4BDQ,KAAM,SACNC,MAAO,SACPC,MA9BC,iBAmCYT,EAAW,4DAAD,OAA6DD,IAnCnF,mCAiCDQ,KAAM,UACNC,MAAO,UACPC,MAnCC,iBAwCYT,EAAW,yDAAD,OAA0DD,IAxChF,mCAsCDQ,KAAM,cACNC,MAAO,mBACPC,MAxCC,mHAAF,kDAAC,GA6CZC,aAAa,WAAD,4BAAE,WAAOC,EAASC,GAAhB,eAAAV,EAAA,yDACNW,EAAO,IAERF,EAHO,sBAICC,EAJD,OAKG,UALH,OAQG,OARH,uCAMeZ,EAAW,UAAD,OAAWW,EAAX,mCAA6CZ,IANtE,cAMEc,EANF,oDASeb,EAAW,OAAD,OAAQW,EAAR,mCAA0CZ,IATnE,eASEc,EATF,2CAYEA,EAAO,KAZT,sDAiBHA,GAjBG,4CAAF,qDAAC,I,uDCpDF,cAAqB,IAAnBL,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,MAAW,EAEDK,mBAAS,GAFR,mBAExBC,EAFwB,KAEfC,EAFe,KAsB/B,OACI,sBAAKC,UAAU,WAAf,UACI,6BAAKT,IACL,qBAAKS,UAAU,gBAAgBC,QArBf,WACpB,IAAIC,EAAIJ,EAAUK,KAAKC,MAAMC,OAAOC,WAAW,GAC5CJ,EAAI,IACHA,EAAE,GAENH,EAAWG,IAgBP,SACI,cAAC,IAAD,CAAqBK,MAAO,CAACC,SAAU,QAE3C,qBAAKR,UAAU,iBAAiBC,QAhBf,WACrB,IAAIC,EAAIJ,EAAUK,KAAKC,MAAMC,OAAOC,WAAW,GAC3CG,EAA+B,IAAvBjB,EAAMkB,QAAQC,OAEtBN,OAAOC,WAAaG,EAASP,IAC7BA,EAAKG,OAAOC,WAAaG,EAAQ,IAErCV,EAAWG,IASP,SACI,cAAC,IAAD,CAAkBK,MAAO,CAACC,SAAU,QAIxC,qBAAKR,UAAU,oBAAf,SACI,qBAAKA,UAAU,gBAAgBO,MAAQ,CACnCK,WAAYd,EACZe,MAA8B,IAAvBrB,EAAMkB,QAAQC,QAFzB,SAICnB,EAAMkB,QAAQC,OAAS,GAAKnB,EAAMkB,QAAQI,KAAI,SAACC,EAAMC,GAAP,OAC3C,qBAAKhB,UAAY,iBAAjB,SACK,qBAAKiB,IAAG,yCAAsCF,EAAKG,aAAeC,IAAKJ,EAAKK,8BC1CtF,G,MAAA,YAAY,IAAVL,EAAS,EAATA,KAETM,EAAY,IAAIC,KAAKP,EAAKQ,gBAC1BC,EAAS,GACb,IAAI,IAAIC,KAAKV,EAAKS,OACdA,EAAOE,KAAMX,EAAKS,OAAOC,GAAGE,MAGhC,IAAIC,EAAcb,EAAKc,SAKvB,OAJGD,EAAYjB,OAAS,MACpBiB,EAAcA,EAAYE,UAAU,EAAG,KAAK,OAI5C,yBAAS9B,UAAU,WAAWO,MAAO,CACjCwB,eAAgB,QAChBC,mBAAoB,SACpBC,gBAAgB,0CAAD,OAA4ClB,EAAKmB,cAAjD,MAHnB,SAKI,qBAAKlC,UAAY,oBAAjB,SACI,sBAAKA,UAAY,sBAAjB,UACI,qBAAKA,UAAY,gBAAjB,SACKe,EAAKoB,gBAEV,sBAAKnC,UAAU,gBAAf,UACI,sBAAKA,UAAY,kBAAjB,UAAoCe,EAAKqB,aAAzC,YACA,qBAAKpC,UAAY,gBAAjB,SAAkCqB,EAAUgB,gBAC5C,sBAAKrC,UAAY,mBAAjB,UAAqCe,EAAKuB,kBAA1C,YAAiG,IAA3BvB,EAAKuB,kBAA0B,IAAM,SAE/G,qBAAKtC,UAAY,uBAAjB,SACK4B,IAEL,sBAAK5B,UAAY,mBAAjB,UACI,mBAAGuC,KAAI,iBAAYxB,EAAKyB,IAAMxC,UAAU,2BAAxC,6BACA,mBAAGuC,KAAI,mBAAcxB,EAAKyB,IAAOxC,UAAU,6BAA3C,8BAEJ,sBAAKA,UAAY,kBAAjB,UACI,kDACCwB,EAAOiB,KAAK,kBCtCtB,G,MAAA,YAAa,IAAXC,EAAU,EAAVA,MACb,OACI,yBAAQ1C,UAAW0C,EAAQ,QAAU,GAArC,UACI,qBAAK1C,UAAU,cAAf,SACI,mBAAGuC,KAAK,IAAR,SACI,qBAAKtB,IAAI,iEAAiEE,IAAI,gBAGtF,qBAAKnB,UAAU,iBAAf,SACI,mBAAGuC,KAAK,IAAR,SACI,qBAAKtB,IAAM,sJAAsJE,IAAI,qBCV1K,G,MAAA,WACX,OACI,sDACoB,uBADpB,kCAEmC,uBAFnC,oCAGqC,4BCG9B,aAAO,IAAD,EAEetB,mBAAS,IAFxB,mBAEZ8C,EAFY,KAEDC,EAFC,OAGqB/C,mBAAS,MAH9B,mBAGZgD,EAHY,KAGEC,EAHF,OAI2BjD,oBAAS,GAJpC,mBAIZkD,EAJY,KAIKC,EAJL,KA0CnB,OApCAC,qBAAU,WACR,IAAIC,EAAkB,WACf7C,OAAO8C,QAAU,GAClBH,GAAmB,GAEnBA,GAAmB,IAMzB,OAFA3C,OAAO+C,iBAAiB,SAAUF,GAE3B,WACL7C,OAAOgD,oBAAoB,SAAUH,MAEtC,IAEHD,qBAAU,YACK,uCAAG,oCAAAhE,EAAA,sEAEGqE,EAAKjE,cAFR,cAEVkE,EAFU,OAGdX,EAAaW,GAGTC,EAAYD,EAAKE,QAAO,SAAAhC,GAAC,MAAa,cAAXA,EAAEnC,QAC7BoE,EAAevD,KAAKwD,MAAMxD,KAAKyD,UAAYJ,EAAU,GAAGhE,MAAMkB,QAAQC,OAAS,IAC/EkD,EAASL,EAAU,GAAGhE,MAAMkB,QAAQgD,GAR1B,SASSJ,EAAK7D,aAAaoE,EAAOrB,GAAI,MATtC,OASVsB,EATU,OAUdhB,EAAgBgB,GAVF,4CAAH,qDAgBbC,KACC,IAID,sBAAK/D,UAAU,OAAf,UACE,cAAC,EAAD,CAAQ0C,MAAOK,IACdF,GACD,cAAC,EAAD,CAAe9B,KAAQ8B,IAErB,yBAAS7C,UAAU,QAAnB,SACG2C,EAAU7B,KAAI,SAACC,EAAMC,GAAP,OACb,cAAC,EAAD,CAAoBzB,MAASwB,EAAKxB,MAAOC,MAAOuB,EAAKvB,OAAtCwB,QAInB,cAAC,EAAD,IACC2B,EAAUhC,QAAU,GACrB,qBAAKX,UAAU,UAAf,SACE,qBAAKiB,IAAI,uGAAuGE,IAAI,qBChE9H6C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.64010ece.chunk.js","sourcesContent":["//api\r\nconst API_KEY = 'c3818315f74626bcd960a6338e4f29e7';\r\nconst API_BASE = 'https://api.themoviedb.org/3';\r\n\r\n\r\nconst basicFetch = async (endpoint) => {\r\n    const req = await fetch(`${API_BASE}${endpoint}`);\r\n    const json = await req.json();\r\n    return json;\r\n}\r\n\r\nexport default {\r\n    getHomeList: async () =>{\r\n        return[\r\n            {\r\n                slug: 'originals',\r\n                title: 'Originais do Netflix',\r\n                items: await basicFetch(`/discover/tv/?with_network=213&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'trending',\r\n                title: 'Recomendados para você',\r\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'toprated',\r\n                title: 'Em alta',\r\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'action',\r\n                title: 'Ação',\r\n                items: await basicFetch(`/discover/movie?with_genres=28&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'comedy',\r\n                title: 'Comédia',\r\n                items: await basicFetch(`/discover/movie?with_genres=35&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'horror',\r\n                title: 'Terror',\r\n                items: await basicFetch(`/discover/movie?with_genres=27&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'romance',\r\n                title: 'Romance',\r\n                items: await basicFetch(`/discover/movie?with_genres=10749&language=pt-BR&api_key=${API_KEY}`)\r\n            },\r\n            {\r\n                slug: 'documentary',\r\n                title: 'Documentários',\r\n                items: await basicFetch(`/discover/movie?with_genres=99&language=pt-BR&api_key=${API_KEY}`)\r\n            }\r\n        ];\r\n    },\r\n\r\n    getMovieInfo: async (movieId, type) =>{\r\n        let info = {};\r\n\r\n        if(movieId){\r\n            switch(type){\r\n                case 'movie':\r\n                    info = await basicFetch(`/movie/${movieId}?language=pt_BR&api_key=${API_KEY}`);\r\n                break;\r\n                case 'tv':\r\n                    info = await basicFetch(`/tv/${movieId}?language=pt_BR&api_key=${API_KEY}`);\r\n                break;\r\n                default:\r\n                    info = null;\r\n                break;\r\n            }\r\n        }\r\n\r\n        return info;\r\n    }\r\n\r\n}","import React, {useState} from 'react';\r\nimport './MovieRow.css';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nexport default ({title, items}) => {\r\n\r\n    const [scrollX, setScrollX] = useState(0)\r\n\r\n    const handleLeftArrow = () =>{\r\n        let x = scrollX + Math.round(window.innerWidth/2);\r\n        if(x > 0){\r\n            x=0;\r\n        }\r\n        setScrollX(x);\r\n}\r\n\r\n    const handleRightArrow = () =>{\r\n        let x = scrollX - Math.round(window.innerWidth/2);\r\n        let listW = items.results.length * 150\r\n\r\n        if((window.innerWidth - listW) > x){\r\n            x = (window.innerWidth - listW) -60;\r\n        }\r\n        setScrollX(x)\r\n    }\r\n\r\n    return(\r\n        <div className=\"movieRow\">\r\n            <h2>{title}</h2>\r\n            <div className=\"movieRow-left\" onClick={handleLeftArrow}>\r\n                <NavigateBeforeIcon  style={{fontSize: 60}}/>\r\n            </div>\r\n            <div className=\"movieRow-right\" onClick={handleRightArrow}>\r\n                <NavigateNextIcon style={{fontSize: 60}}/>\r\n            </div>\r\n\r\n\r\n            <div className=\"movieRow-listArea\">\r\n                <div className=\"movieRow-list\" style= {{\r\n                    marginLeft: scrollX,\r\n                    width: items.results.length * 150\r\n                }}>\r\n                {items.results.length > 0 && items.results.map((item, key) => (\r\n                    <div className = \"movieRow--item\">\r\n                         <img src = {`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\r\n                    </div>\r\n                ))}\r\n                </div>\r\n\r\n                \r\n            </div>\r\n        </div>\r\n    );\r\n}","import React from 'react';\r\nimport './FeaturedMovie.css'\r\n\r\nexport default ({item}) =>{\r\n\r\n    let firstDate = new Date(item.first_air_date);\r\n    let genres = [];\r\n    for(let i in item.genres){\r\n        genres.push( item.genres[i].name);\r\n    }\r\n\r\n    let description = item.overview;\r\n    if(description.length > 200){\r\n        description = description.substring(0, 200)+'...'\r\n    }\r\n\r\n    return(\r\n        <section className=\"featured\" style={{\r\n            backgroundSize: 'cover',\r\n            backgroundPosition: 'center',\r\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\r\n        }}>\r\n            <div className = \"featured-vertical\">\r\n                <div className = \"featured-horizontal\">\r\n                    <div className = \"featured-name\">\r\n                        {item.original_name}\r\n                    </div>\r\n                    <div className=\"featured-info\">\r\n                        <div className = \"featured-points\">{item.vote_average}pontos</div>\r\n                        <div className = \"featured-year\">{firstDate.getFullYear()}</div>\r\n                        <div className = \"featured-seasons\">{item.number_of_seasons}temporada{item.number_of_seasons !== 1 ? 's' : ''}</div>\r\n                    </div>\r\n                    <div className = \"featured-description\">\r\n                        {description}\r\n                    </div>\r\n                    <div className = \"featured-buttons\">\r\n                        <a href={`/watch/${item.id}`} className=\"featured-button-assistir\">► Assistir</a>\r\n                        <a href={`/list/add${item.id}` } className=\"featured-button-minhalista\">+ Minha lista</a>\r\n                    </div>\r\n                    <div className = \"featured-genres\">\r\n                        <strong>Gêneros: </strong>\r\n                        {genres.join(', ')}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}","import React from 'react';\r\nimport './Header.css';\r\n\r\nexport default ({black}) =>{\r\n    return(\r\n        <header className={black ? 'black' : ''}>\r\n            <div className=\"header-logo\">\r\n                <a href=\"/\" >\r\n                    <img src=\"http://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"netflix\"/>\r\n                </a>\r\n            </div>\r\n            <div className=\"header-usuario\">\r\n                <a href=\"/\">\r\n                    <img src = \"https://pro2-bar-s3-cdn-cf1.myportfolio.com/dddb0c1b4ab622854dd81280840458d3/98032aebff601c1d993e12a0_rw_600.png?h=8030f4d5734548795c22da59ca72e3e1\" alt=\"usuario\"/>\r\n                </a>\r\n            </div>\r\n        </header>\r\n    );\r\n}","import React from 'react';\r\nimport './Footer.css';\r\n\r\nexport default () => {\r\n    return(\r\n        <footer>\r\n            Feito pela B7Web<br/>\r\n            Direitos de Imagem para Netflix<br/>\r\n            Dados pego do site TheMoviedb.org<br/>\r\n        </footer>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\nimport Tmdb from './Tmdb';\nimport './App.css';\nimport MovieRow from './components/MovieRow'\nimport FeaturedMovie from './components/FeaturedMovie';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\n\n\n\nexport default () => {\n\n  const [movieList, setMovieList] = useState([]);\n  const [featuredData, setFeaturedData] = useState(null);\n  const [backGroundBlack, setBackGroundBlack] = useState(false);\n\n  useEffect(() =>{\n    let scrollListener  = () =>{\n        if(window.scrollY > 10){\n          setBackGroundBlack(true);\n        }else{\n          setBackGroundBlack(false);\n        }\n    }\n\n    window.addEventListener('scroll', scrollListener);\n\n    return () => {\n      window.removeEventListener('scroll', scrollListener);\n    }\n  }, []);\n\n  useEffect(() =>{\n    const loadAll = async () => {\n      //Pegando a lista dos filmes\n      let list = await Tmdb.getHomeList();\n      setMovieList(list);\n\n      //Pegando filme em destaque\n      let originals = list.filter(i=>i.slug === 'originals')\n      let randomChosen = Math.floor(Math.random() * (originals[0].items.results.length - 1));\n      let chosen = originals[0].items.results[randomChosen];\n      let chosenInfo = await Tmdb.getMovieInfo(chosen.id, 'tv');\n      setFeaturedData(chosenInfo);\n\n      \n\n    }\n\n    loadAll();\n  }, []);\n\n  return(\n    \n    <div className=\"page\">\n      <Header black={backGroundBlack}/>\n      {featuredData &&\n      <FeaturedMovie item = {featuredData}/>\n      }\n        <section className=\"lists\">\n          {movieList.map((item, key) => (\n            <MovieRow key={key} title = {item.title} items={item.items}/>\n          ))}\n        </section>\n\n        <Footer />\n        {movieList.length <= 0 && \n        <div className=\"loading\">\n          <img src=\"https://media.wired.com/photos/592744d3f3e2356fd800bf00/master/w_2560%2Cc_limit/Netflix_LoadTime.gif\" alt=\"carregando\"/>\n        </div>\n      }\n    </div>\n  );\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}